// Generated by CoffeeScript 1.7.0
(function() {
  var Adapter, W, fs, _;

  fs = require('fs');

  W = require('when');

  _ = require('lodash');

  Adapter = (function() {
    function Adapter() {}

    Adapter.prototype.render = function(str, opts) {
      if (opts == null) {
        opts = {};
      }
      if (!this._render) {
        return W.reject(new Error('render not supported'));
      }
      return this._render(str, opts);
    };

    Adapter.prototype.renderFile = function(file, opts) {
      if (opts == null) {
        opts = {};
      }
      return this.render(fs.readFileSync(file, 'utf8'), _.extend(opts, {
        filename: file
      }));
    };

    Adapter.prototype.compile = function(str, opts) {
      if (opts == null) {
        opts = {};
      }
      if (!this._compile) {
        return W.reject(new Error('compile not supported'));
      }
      return this._compile(str, opts);
    };

    Adapter.prototype.compileFile = function(file, opts) {
      if (opts == null) {
        opts = {};
      }
      return this.compile(fs.readFileSync(file, 'utf8'), _.extend(opts, {
        filename: file
      }));
    };

    Adapter.prototype.compileClient = function(str, opts) {
      if (opts == null) {
        opts = {};
      }
      if (!this._compileClient) {
        return W.reject(new Error('client-side compile not supported'));
      }
      return this._compileClient(str, opts);
    };

    Adapter.prototype.compileFileClient = function(file, opts) {
      if (opts == null) {
        opts = {};
      }
      return this.compileClient(fs.readFileSync(file, 'utf8'), _.extend(opts, {
        filename: file
      }));
    };

    return Adapter;

  })();

  module.exports = Adapter;

}).call(this);
