{
  "name": "gulp-compass",
  "version": "1.1.8",
  "description": "Compile Compass files",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/appleboy/gulp-compass.git"
  },
  "keywords": [
    "gulp",
    "gulpplugin",
    "compass",
    "scss",
    "sass",
    "css",
    "compile",
    "preprocessor",
    "style"
  ],
  "author": {
    "name": "Bo-Yi Wu"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/appleboy/gulp-compass/issues"
  },
  "homepage": "https://github.com/appleboy/gulp-compass",
  "dependencies": {
    "gulp-util": "~2.2.10",
    "which": "~1.0.5",
    "through2": "~0.4.0"
  },
  "devDependencies": {
    "mocha": "~1.16.2",
    "should": "~2.1.1",
    "which": "~1.0.5",
    "iconv-lite": "~0.2.11",
    "gulp-jshint": "~1.5.0",
    "jshint-stylish": "~0.1.5",
    "map-stream": "~0.1.0",
    "gulp": "~3.3.2",
    "gulp-mocha": "~0.3.0",
    "gulp-clean": "~0.2.4"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "gulp"
  },
  "readme": "# Gulp compass [![NPM version](https://badge.fury.io/js/gulp-compass.png)](http://badge.fury.io/js/gulp-compass) [![Build Status](https://travis-ci.org/appleboy/gulp-compass.png?branch=master)](https://travis-ci.org/appleboy/gulp-compass)\r\n\r\n[![NPM](https://nodei.co/npm/gulp-compass.png?downloads=true&stars=true)](https://nodei.co/npm/gulp-compass/)\r\n\r\n> Compile Sass to CSS using Compass\r\n\r\n## Requirements\r\n\r\n`gulp-compass` requires the compass ruby gem in order to compile compass. This can easily be installed via Terminal.\r\n\r\n```\r\n$ gem update --system\r\n$ gem install compass\r\n```\r\n\r\nPlease refer the [user guide](http://compass-style.org/install/)\r\n\r\n## Installation\r\n\r\nInstall with [npm](https://npmjs.org/package/gulp-compass)\r\n\r\n```\r\n$ npm install gulp-compass --save-dev\r\n```\r\n\r\n## Usage\r\n\r\n### Load config from config.rb\r\n\r\nPlease **make sure** to add ``css`` and ``sass`` options with the same value in ``config.rb``.\r\n\r\n* ``css`` default value is ``css``.\r\n* ``sass`` default value is ``sass``.\r\n\r\n```javascript\r\nvar compass = require('gulp-compass');\r\n\r\ngulp.task('compass', function() {\r\n    gulp.src('./src/*.scss')\r\n        .pipe(compass({\r\n            config_file: './config.rb',\r\n            css: 'stylesheets'\r\n            sass: 'sass'\r\n        }))\r\n        .pipe(gulp.dest('app/assets/temp'));\r\n});\r\n```\r\n\r\n### Load config without config.rb\r\n\r\nset your project path.\r\n\r\n```javascript\r\nvar compass = require('gulp-compass'),\r\n    path = require('path');\r\n\r\ngulp.task('compass', function() {\r\n    gulp.src('./src/*.scss')\r\n        .pipe(compass({\r\n            project: path.join(__dirname, 'assets'),\r\n            css: 'css',\r\n            sass: 'sass'\r\n        }))\r\n        .pipe(gulp.dest('app/assets/temp'));\r\n});\r\n```\r\n\r\nset your compass settings.\r\n\r\n```javascript\r\nvar compass = require('gulp-compass'),\r\n    minifyCSS = require('gulp-minify-css');\r\n\r\ngulp.task('compass', function() {\r\n    gulp.src('./src/*.scss')\r\n        .pipe(compass({\r\n            css: 'app/assets/css',\r\n            sass: 'app/assets/sass',\r\n            image: 'app/assets/images'\r\n        }))\r\n        .pipe(minifyCSS())\r\n        .pipe(gulp.dest('app/assets/temp'));\r\n});\r\n```\r\n\r\nSupport multiple require option\r\n\r\n```javascript\r\nvar compass = require('gulp-compass'),\r\n    minifyCSS = require('gulp-minify-css');\r\n\r\ngulp.task('compass', function() {\r\n    gulp.src('./src/*.scss')\r\n        .pipe(compass({\r\n            css: 'app/assets/css',\r\n            sass: 'app/assets/sass',\r\n            image: 'app/assets/images',\r\n            require: ['susy', 'modular-scale']\r\n        }))\r\n        .pipe(minifyCSS())\r\n        .pipe(gulp.dest('app/assets/temp'));\r\n});\r\n```\r\n\r\nSupport return the output of the Compass as the callback\r\n\r\n```javascript\r\nvar compass = require('gulp-compass'),\r\n    minifyCSS = require('gulp-minify-css');\r\n\r\ngulp.task('compass', function() {\r\n    gulp.src('./src/*.scss')\r\n        .pipe(compass({\r\n            css: 'app/assets/css',\r\n            sass: 'app/assets/sass',\r\n            image: 'app/assets/images'\r\n        }))\r\n        .on('error', function(err) {\r\n            // Would like to catch the error here\r\n        })\r\n        .pipe(minifyCSS())\r\n        .pipe(gulp.dest('app/assets/temp'));\r\n});\r\n```\r\n\r\n## Configuration\r\n\r\n### Configuration Options\r\n\r\n#### style\r\n\r\n**default:** nested\r\n\r\n**description:** The output style for the compiled css.\r\nOne of: nested, expanded, compact, or compressed.\r\n\r\n#### comments\r\n\r\n**default:** true\r\n\r\n**description:** Show line comments or not.\r\n\r\n#### relative\r\n\r\n**default:** true\r\n\r\n**description:** Are assets relative.\r\n\r\n#### css\r\n\r\n**default:** css\r\n\r\n**description:** The target directory where you keep your css stylesheets. It is relative to the ``project`` option.\r\n\r\n#### sass\r\n\r\n**default:** sass\r\n\r\n**description:** The source directory where you keep your sass stylesheets. It is relative to the ``project`` option.\r\n\r\n#### javascript\r\n\r\n**default:** js\r\n\r\n**description:** The directory where you keep your javascripts. It is relative to the ``project`` option.\r\n\r\n#### font\r\n\r\n**default:** font\r\n\r\n**description:** The directory where you keep your fonts. It is relative to the ``project`` option.\r\n\r\n#### project\r\n\r\n**default:** your project base\r\n\r\n**description:** The location where all your assets are store.\r\n\r\n#### logging\r\n\r\n**default:** true\r\n\r\n**description:** show/hide compile log message.\r\n\r\n#### import_path\r\n\r\n**default:** false\r\n\r\n**format:** ``string`` or ``array``\r\n\r\n**description:** The directory where you keep external Compass plugins or extensions that you would like to make available using the `@import` function. Common use case would be setting this to your `bower_components` directory for example. It is relative to the ``project`` option.\r\n\r\n#### require\r\n\r\n**default:** false\r\n\r\n**format:** ``string`` or ``array``\r\n\r\n**description:** Require the given Ruby library before running commands. This is used to access Compass plugins without having a project configuration file.\r\n\r\n#### load_all\r\n\r\n**default:** false\r\n\r\n**description:** Load all the frameworks or extensions found in the FRAMEWORKS_DIR directory.\r\n\r\n#### bundle_exec\r\n\r\n**default:** false\r\n\r\n**description:** Run compass compile with [bundle exec](http://bundler.io/v1.5/man/bundle-exec.1.html): ``bundle exec compass compile``.\r\n\r\n#### sourcemap\r\n\r\n**default:** false\r\n\r\n**description:** Generate standard JSON source maps.\r\n\r\nPS. Current compass `0.12.4` version  doesn't support `--sourcemap` flag, please update sass and compass as the following version.\r\n\r\n```\r\n* sass (3.3.3)\r\n* compass (1.0.0.alpha.19)\r\n```\r\n\r\n#### time\r\n\r\n**default:** false\r\n\r\n**description:** Display compilation times.\r\n\r\n#### debug\r\n\r\n**default:** false\r\n\r\n**description:** Turns on sass's debuging information.\r\n\r\n## Running tests\r\n\r\n```\r\n$ gem install sass\r\n$ gem install compass\r\n$ gem install susy\r\n$ gem install modular-scale\r\n$ npm test\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "gulp-compass@1.1.8",
  "dist": {
    "shasum": "00d822992af977fe787bd40330ea77465c4c00bb"
  },
  "_from": "gulp-compass@",
  "_resolved": "https://registry.npmjs.org/gulp-compass/-/gulp-compass-1.1.8.tgz"
}
